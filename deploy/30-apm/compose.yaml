name: apm

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    restart: always
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - node.name=es
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - ELASTIC_PASSWORD=${APM_ELASTIC_PASSWORD}
      - xpack.security.enabled=true
      - xpack.security.http.ssl.enabled=false
    # ports: ["9200:9200"]
    healthcheck: # https://github.com/elastic/elasticsearch/blob/8.15/docs/reference/setup/install/docker/docker-compose.yml
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  post-elasticsearch: # https://github.com/elastic/elasticsearch/blob/d55f984299e0e88dee72ebd8255f7ff130859ad0/docs/reference/setup/install/docker/docker-compose.yml
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    # https://www.elastic.co/guide/en/observability/8.15/apm-privileges-to-publish-events.html
    # https://www.elastic.co/guide/en/observability/8.15/apm-privileges-agent-central-config.html
    command: > 
      bash -e -x -c '
        test -f /usr/share/elasticsearch/data/.initialized && exit 0
        touch /usr/share/elasticsearch/data/.initialized
        curl --fail -s -X POST -u "elastic:${APM_ELASTIC_PASSWORD}" -H "Content-Type: application/json" http://elasticsearch:9200/_security/user/kibana_system/_password -d "{\"password\":\"${APM_KIBANA_PASSWORD}\"}"
        curl --fail -s -X POST -u "elastic:${APM_ELASTIC_PASSWORD}" -H "Content-Type: application/json" http://elasticsearch:9200/_security/role/apm_writer -d "{\"cluster\":[\"monitor\"],\"indices\":[{\"names\":[\"traces-apm*\",\"logs-apm*\",\"metrics-apm*\"],\"privileges\":[\"auto_configure\",\"create_doc\"]},{\"names\":[\".apm-agent-configuration\"],\"privileges\":[\"read\"],\"allow_restricted_indices\":true}]}"
        curl --fail -s -X POST -u "elastic:${APM_ELASTIC_PASSWORD}" -H "Content-Type: application/json" http://elasticsearch:9200/_security/user/apm_writer -d "{\"roles\":[\"apm_writer\"],\"password\":\"${APM_WRITER_PASSWORD}\"}"
      '
    depends_on:
      elasticsearch:
        condition: service_healthy

  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.0
    restart: always
    volumes:
      - kibana_data:/usr/share/kibana/data
    environment:
      - SERVERNAME=kibana
      - TELEMETRY_OPTIN=false
      - TELEMETRY_ALLOWCHANGINGOPTINSTATUS=false
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${APM_KIBANA_PASSWORD}
      - xpack.fleet.packages=[{"name":"apm","version":"latest"}]
    ports:
      - 5601:5601
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      post-elasticsearch:
        condition: service_completed_successfully

  apm-server:
    image: docker.elastic.co/apm/apm-server:8.15.0
    restart: always
    command:
      - -e
      - -E=max_procs=4
      - -E=apm-server.auth.secret_token=${APM_SECRET_TOKEN}
      - -E=output.elasticsearch.hosts=["http://elasticsearch:9200"]
      - -E=output.elasticsearch.username=apm_writer
      - -E=output.elasticsearch.password=${APM_WRITER_PASSWORD}
    ports:
      - 8200:8200
    # healthcheck:
    #   test:
    #     [
    #       "CMD-SHELL",
    #       'curl -s -H "Authorization: Bearer ${APM_SECRET_TOKEN}" http://localhost:8200 | grep -q ''publish_ready": true''',
    #     ]
    #   interval: 10s
    #   timeout: 10s
    #   retries: 30
    depends_on:
      post-elasticsearch:
        condition: service_completed_successfully

volumes:
  elasticsearch_data: {}
  kibana_data: {}
